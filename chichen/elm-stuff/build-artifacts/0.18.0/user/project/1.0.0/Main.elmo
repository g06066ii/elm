var _user$project$Main$formatChickenCount = function (count) {
	return _elm_lang$core$Native_Utils.eq(count, 1) ? 'There is 1 chicken.' : A2(
		_elm_lang$core$Basics_ops['++'],
		'There are ',
		A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(count),
			' chickens.'));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Increment') {
			return model + 1;
		} else {
			return model - 1;
		}
	});
var _user$project$Main$Decrement = {ctor: 'Decrement'};
var _user$project$Main$viewDecrementButton = A2(
	_elm_lang$html$Html$button,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Decrement),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('We\'re missing a lesser prairie chicken :('),
		_1: {ctor: '[]'}
	});
var _user$project$Main$Increment = {ctor: 'Increment'};
var _user$project$Main$viewIncrementButton = A2(
	_elm_lang$html$Html$button,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Increment),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('I see a new lesser prairie chicken!!!'),
		_1: {ctor: '[]'}
	});
var _user$project$Main$view = function (count) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: function (_p1) {
				return _elm_lang$html$Html_Attributes$style(
					_rtfeldman$elm_css$Css$asPairs(_p1));
			}(
				{
					ctor: '::',
					_0: _rtfeldman$elm_css$Css$color(_rtfeldman$elm_css$Css_Colors$green),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Prairie Chicken, Lesser'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h2,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('An Accounting of Hens'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_user$project$Main$formatChickenCount(count)),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _user$project$Main$viewIncrementButton,
						_1: {
							ctor: '::',
							_0: (_elm_lang$core$Native_Utils.cmp(count, 0) > 0) ? _user$project$Main$viewDecrementButton : _elm_lang$html$Html$text(''),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: 0, update: _user$project$Main$update, view: _user$project$Main$view})();
